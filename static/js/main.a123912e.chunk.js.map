{"version":3,"sources":["store/action/action.js","store/action/actionTypes.js","components/Task/Task.styles.js","components/Task/Task.jsx","components/TaskList/TaskList.styles.js","components/TaskList/TaskList.jsx","components/AddTask/AddTask.styles.js","components/AddTask/AddTask.jsx","components/Filter/Filter.styles.js","components/Filter/Filter.jsx","components/Header/Header.styles.js","components/Header/Header.jsx","App.js","store/reducers/filterReducer.js","store/reducers/taskReducer.js","store/reducers/index.js","store/store.js","index.js"],"names":["ADD_TASK","DELETE_TASK","COMPLETE_TASK","SAVE_EDITED","SHOW_ACTIVE","SHOW_DONE","SHOW_ALL","SET_FILTER","TaskContainer","styled","div","props","status","TasksWrapper","ButtonsWrapper","StyledData","TaskContent","TaskEdit","Task","task","dispatch","useDispatch","useState","content","value","setValue","editMode","setEditMode","saveEdited","id","type","payload","isActive","onChange","e","target","onKeyDown","key","onClick","date","disabled","ListWrapper","TaskList","todo","useSelector","state","taskReducer","filterReducer","filter","map","InputWrapper","AddTask","onClickAddTask","nanoid","Date","now","toLocaleString","placeholder","FilterButtons","Filter","StyledHeader","h1","Header","App","className","initialState","rootReducer","combineReducers","action","newTask","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a123912e.chunk.js","sourcesContent":["import { actionTypes } from \"./actionTypes\";\n\nconst {\n  ADD_TASK,\n  DELETE_TASK,\n  COMPLETE_TASK,\n  SAVE_EDITED,\n  SHOW_ACTIVE,\n  SHOW_DONE,\n  SHOW_ALL,\n  SET_FILTER,\n} = actionTypes;\nexport const actCompleteTask = (id) => ({\n  type: COMPLETE_TASK,\n  payload: id,\n});\nexport const actDeleteTask = (id) => ({\n  type: DELETE_TASK,\n  payload: id,\n});\nexport const actAddTask = (task) => ({\n  type: ADD_TASK,\n  payload: task,\n});\nexport const actSaveEdited = (id, content) => ({\n  type: SAVE_EDITED,\n  payload: { id, content },\n});\nexport const actFilterAll = () => ({\n  type: SET_FILTER,\n  payload: SHOW_ALL,\n});\nexport const actFilterActive = () => ({\n  type: SET_FILTER,\n  payload: SHOW_ACTIVE,\n});\nexport const actFilterDone = () => ({\n  type: SET_FILTER,\n  payload: SHOW_DONE,\n});\n","export const actionTypes = {\n  COMPLETE_TASK: \"COMPLETE_TASK\",\n  ADD_TASK: \"ADD_TASK\",\n  DELETE_TASK: \"DELETE_TASK\",\n  SET_FILTER: \"SET_FILTER\",\n  SAVE_EDITED: \"SAVE_EDITED\",\n  SHOW_ACTIVE: \"SHOW_ACTIVE\",\n  SHOW_DONE: \"SHOW_DONE\",\n  SHOW_ALL: \"SHOW_ALL\",\n};\n","import styled from \"styled-components\";\n\nexport const TaskContainer = styled.div`\n  //таска и дата\n  min-height: 200px;\n  width: 700px;\n  display: flex;\n  flex-direction: column;\n  align-content: center;\n  align-items: center;\n  justify-content: space-evenly;\n  border: black solid;\n  border-radius: 15px;\n  box-shadow: darkslategrey;\n  background-color: ${(props) => (props.status ? \"#78dbe2\" : \"grey\")};\n`;\n\nexport const TasksWrapper = styled.div`\n  //таска и кнопки\n  text-align: center;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n`;\n\nexport const ButtonsWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n\nexport const StyledData = styled.div``;\n\nexport const TaskContent = styled.div`\n  //таска\n  width: 500px;\n  text-align: center;\n  word-wrap: break-word;\n  font-weight: bold;\n  font-size: 1.6rem;\n`;\nexport const TaskEdit = styled.div`\n  width: 250px;\n  display: flex;\n  flex-direction: column;\n  font-weight: bold;\n  font-size: 1.6rem;\n`;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useState } from \"react\";\nimport {\n  actCompleteTask,\n  actDeleteTask,\n  actSaveEdited,\n} from \"../../store/action/action\";\nimport {\n  ButtonsWrapper,\n  StyledData,\n  TaskContainer,\n  TaskContent,\n  TaskEdit,\n  TasksWrapper,\n} from \"./Task.styles\";\n\nexport const Task = ({ task }) => {\n  const dispatch = useDispatch();\n  const [value, setValue] = useState(task.content);\n  const [editMode, setEditMode] = useState(false);\n\n  const taskComplete = () => {\n    dispatch(actCompleteTask(task.id));\n  };\n  const taskDelete = () => {\n    dispatch(actDeleteTask(task.id));\n  };\n  const taskEdit = () => {\n    setEditMode(true);\n  };\n  const saveEdited = () => {\n    if (value) {\n      dispatch(actSaveEdited(task.id, value));\n      setEditMode(false);\n    }\n  };\n  const handleSubmit = (e) => {\n    if (e.key === \"Enter\" && value) {\n      saveEdited();\n    }\n  };\n  const handleSetValue = (e) => {\n    setValue(e.target.value);\n  };\n  return (\n    <TasksWrapper>\n      <TaskContainer status={task.isActive}>\n        {editMode ? (\n          <TaskEdit>\n            <input\n              value={value}\n              onChange={handleSetValue}\n              onKeyDown={handleSubmit}\n            />\n            {!value && <span>Please type something</span>}\n            <button onClick={saveEdited}>Save</button>\n          </TaskEdit>\n        ) : (\n          <div>\n            <TaskContent>{task.content}</TaskContent>\n            <StyledData>{task.date}</StyledData>\n          </div>\n        )}\n      </TaskContainer>\n      <ButtonsWrapper>\n        <button disabled={editMode} onClick={taskComplete}>\n          Complete\n        </button>\n        <button onClick={taskDelete}>Delete</button>\n        <button disabled={editMode} onClick={taskEdit}>\n          Edit\n        </button>\n      </ButtonsWrapper>\n    </TasksWrapper>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const ListWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n","import React from \"react\";\nimport { Task } from \"../Task/Task\";\nimport { useSelector } from \"react-redux\";\nimport { ListWrapper } from \"./TaskList.styles\";\n\nexport const TaskList = () => {\n  const todo = useSelector((state) => state.taskReducer.todo);\n  const filter = useSelector((state) => state.filterReducer.filter);\n  switch (filter) {\n    case \"SHOW_ALL\":\n      return (\n        <ListWrapper>\n          {todo.map((task) => (\n            <Task key={task.id} task={task} />\n          ))}\n        </ListWrapper>\n      );\n    case \"SHOW_ACTIVE\":\n      return (\n        <ListWrapper>\n          {todo\n            .filter((task) => task.isActive === true)\n            .map((task) => (\n              <Task key={task.id} task={task} />\n            ))}\n        </ListWrapper>\n      );\n    case \"SHOW_DONE\":\n      return (\n        <ListWrapper>\n          {todo\n            .filter((task) => task.isActive === false)\n            .map((task) => (\n              <Task key={task.id} task={task} />\n            ))}\n        </ListWrapper>\n      );\n  }\n};\n","import styled from \"styled-components\";\nexport const InputWrapper = styled.div`\n  display: flex;\n  margin: 10px;\n  align-items: baseline;\n`;\n","import React from \"react\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { actAddTask } from \"../../store/action/action\";\nimport { nanoid } from \"@reduxjs/toolkit\";\nimport { InputWrapper } from \"./AddTask.styles\";\n\nexport const AddTask = () => {\n  const [value, setValue] = useState(\"\");\n  const dispatch = useDispatch();\n\n  const handleSubmit = (e) => {\n    if (e.key === \"Enter\" && value) {\n      onClickAddTask();\n    }\n  };\n\n  const handleSetValue = (e) => {\n    setValue(e.target.value);\n  };\n\n  const onClickAddTask = () => {\n    if (value) {\n      dispatch(\n        actAddTask({\n          id: nanoid(),\n          content: value,\n          date: new Date(Date.now()).toLocaleString(\"en-GB\"),\n        })\n      );\n      setValue(\"\");\n    }\n  };\n\n  return (\n    <InputWrapper>\n      <input\n        placeholder=\"add new task\"\n        value={value}\n        onChange={handleSetValue}\n        onKeyDown={handleSubmit}\n      />\n      <button onClick={onClickAddTask}>Save</button>\n    </InputWrapper>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const FilterButtons = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n","import React from \"react\";\nimport { FilterButtons } from \"./Filter.styles\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  actFilterActive,\n  actFilterDone,\n  actFilterAll,\n} from \"../../store/action/action\";\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const showAll = () => {\n    dispatch(actFilterAll());\n  };\n\n  const showActive = () => {\n    dispatch(actFilterActive());\n  };\n  const showDone = () => {\n    dispatch(actFilterDone());\n  };\n\n  return (\n    <FilterButtons>\n      <button onClick={showAll}>all</button>\n      <button onClick={showActive}>open</button>\n      <button onClick={showDone}>closed</button>\n    </FilterButtons>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const StyledHeader = styled.h1`\n  font-family: \"Roboto\", sans-serif;\n  font-weight: 700;\n  font-size: 3rem;\n  text-align: center;\n`;\n","import { StyledHeader } from \"./Header.styles\";\n\nexport const Header = () => {\n  return <StyledHeader>TodoList</StyledHeader>;\n};\n","import React from \"react\";\nimport { TaskList } from \"./components/TaskList/TaskList\";\nimport { AddTask } from \"./components/AddTask/AddTask\";\nimport { Filter } from \"./components/Filter/Filter\";\nimport { Header } from \"./components/Header/Header\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <AddTask />\n      <Filter />\n      <TaskList />\n    </div>\n  );\n}\n\nexport default App;\n","const initialState = { filter: \"SHOW_ALL\" };\n\nexport const filterReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"SET_FILTER\":\n      return { ...state, filter: action.payload };\n    default:\n      return state;\n  }\n};\n","const initialState = {\n  todo: [],\n};\n\nexport const taskReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"ADD_TASK\":\n      const newTask = {\n        id: action.payload.id,\n        isActive: true,\n        content: action.payload.content,\n        date: action.payload.date,\n      };\n      return {\n        ...state,\n        todo: [...state.todo, newTask],\n      };\n    case \"DELETE_TASK\":\n      return {\n        ...state,\n        todo: [...state.todo.filter((task) => task.id !== action.payload)],\n      };\n    case \"COMPLETE_TASK\":\n      return {\n        ...state,\n        todo: [\n          ...state.todo.map((task) =>\n            task.id === action.payload\n              ? {\n                  ...task,\n                  isActive: !task.isActive,\n                }\n              : task\n          ),\n        ],\n      };\n    case \"SAVE_EDITED\":\n      return {\n        ...state,\n        todo: [\n          ...state.todo.map((task) =>\n            task.id === action.payload.id\n              ? {\n                  ...task,\n                  content: action.payload.content,\n                }\n              : task\n          ),\n        ],\n      };\n    default:\n      return state;\n  }\n};\n","import { filterReducer } from \"./filterReducer\";\nimport { taskReducer } from \"./taskReducer\";\nimport { combineReducers } from \"redux\";\n\nexport const rootReducer = combineReducers({\n  filterReducer,\n  taskReducer,\n});\n","import { createStore } from \"redux\";\nimport { rootReducer } from \"./reducers\";\nexport const store = createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store/store\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}